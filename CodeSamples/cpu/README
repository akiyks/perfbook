cachetorture.c
	Simple measurement of cache-to-cache latencies.

cachetorturenuma.sh
	Driver script for cachetorture.c on NUMA platform, taking into
	account socket boundaries.

cachetorture.sh
	Driver script for cachetorture.c on non-NUMA platform, ignoring
	any socket boundaries.

categorize.sh
	Attempt to intuit structure of system based on a series of cache
	latency measurements taken by cachetorture.c.

coe2dot.sh
	Produce a .dot file showing a partial order on writes based
	on the output of a temporal.c run.

coe2first.sh
	Debugging aid, checks the assumption that a given thread will
	most likely read back its own value.

coereduce.sh
	Given the output of temporal.c with the --coe command-line
	argument, produce a .dat file plotting the number of opinions
	on the value of the shared variable as a function of time.

coe.sh
	Run temporal.c with the --coe command-line argument and report
	the most atemporal (or failing that, the closest to atemporal)
	outcome in that run.

fre.sh
	Run temporal.c with the --fre command-line argument and report
	the temporality of each reading thread.

Makefile
	Like the name says...

overview.sh
	Repeatedly run cachetorture.c to gain an overview of cache
	latency from the viewpoint of CPU 0.

perftemporal.sh
	Do "./temporal --coe" and repeated coe.sh, fre.sh, and rfe.sh
	runs in order to collect data for plots.  This data can be
	processed by temporalhist.sh.

plots.sh
	Plot cache-latency data produced by reduce.sh.

README
	This file.

reduce.sh
	Reduce data collected by cachetorture.sh in preparation for
	use of this data by plots.sh.

rfe.sh
	Run temporal.c with the --rfe command-line argument and report
	the temporality of each reading thread.

temporal.c
	Run a coe, fre, or rfe experiment.

temporalhist.sh
	Produce .dat files (suitable for plotting, but perhaps requiring
	manual trimming of extreme values produced by OS noise) from
	data gathered from multiple runs of coe.sh, fre.sh, and rfe.sh.
	Or from a perftemporal.sh run.

tscalibrate.c
	Estimate the duration of the timestamp counter period in
	nanoseconds.
