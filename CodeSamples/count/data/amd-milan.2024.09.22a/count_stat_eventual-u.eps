%!PS-Adobe-2.0
%%Title: count_stat_eventual-u.eps
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Mon Sep 23 11:41:54 2024
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 410
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 410 lineto 50 410 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (count_stat_eventual-u.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 23 11:41:54 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
370 925 M
63 0 V
1906 0 R
-63 0 V
stroke
310 925 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
/vshift -33 def
1.000 UL
LTb
LCb setrgbcolor
370 1253 M
63 0 V
1906 0 R
-63 0 V
stroke
310 1253 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
370 1582 M
63 0 V
1906 0 R
-63 0 V
stroke
310 1582 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 2)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
370 1910 M
63 0 V
1906 0 R
-63 0 V
stroke
310 1910 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 3)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
370 2238 M
63 0 V
1906 0 R
-63 0 V
stroke
310 2238 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 4)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
370 2567 M
63 0 V
1906 0 R
-63 0 V
stroke
310 2567 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 5)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
370 2895 M
63 0 V
1906 0 R
-63 0 V
stroke
310 2895 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 6)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
370 925 M
0 63 V
0 1907 R
0 -63 V
stroke
370 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
616 925 M
0 63 V
0 1907 R
0 -63 V
stroke
616 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 20)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
862 925 M
0 63 V
0 1907 R
0 -63 V
stroke
862 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 40)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1108 925 M
0 63 V
0 1907 R
0 -63 V
stroke
1108 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 60)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1355 925 M
0 63 V
0 1907 R
0 -63 V
stroke
1355 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 80)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1601 925 M
0 63 V
0 1907 R
0 -63 V
stroke
1601 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1847 925 M
0 63 V
0 1907 R
0 -63 V
stroke
1847 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 120)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2093 925 M
0 63 V
0 1907 R
0 -63 V
stroke
2093 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 140)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2339 925 M
0 63 V
0 1907 R
0 -63 V
stroke
2339 825 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 160)]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
370 2895 N
370 925 L
1969 0 V
0 1970 V
-1969 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
95 1910 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Time Per Increment \(ns\))]
] -33.3 MCshow
grestore
/Helvetica findfont 100 scalefont setfont
LTb
LCb setrgbcolor
1354 675 M
[ [(Helvetica) 100.0 0.0 true true 0 (Number of CPUs \(Threads\))]
] -33.3 MCshow
/Helvetica findfont 100 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
382 2060 M
0 268 V
370 2060 M
43 0 V
-43 268 R
43 0 V
395 2058 M
0 232 V
370 2058 M
56 0 V
-56 232 R
56 0 V
407 2096 M
0 150 V
376 2096 M
62 0 V
-62 150 R
62 0 V
419 2134 M
0 107 V
388 2134 M
62 0 V
-62 107 R
62 0 V
432 2112 M
0 127 V
401 2112 M
62 0 V
-62 127 R
62 0 V
444 2118 M
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
-19 -93 R
0 114 V
425 2120 M
62 0 V
-62 114 R
62 0 V
468 2109 M
0 99 V
-31 -99 R
62 0 V
-62 99 R
62 0 V
-18 -91 R
0 90 V
-31 -90 R
62 0 V
-62 90 R
62 0 V
493 2094 M
0 108 V
462 2094 M
62 0 V
-62 108 R
62 0 V
-19 -75 R
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
-18 -88 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
-19 -61 R
0 60 V
-31 -60 R
62 0 V
-62 60 R
62 0 V
-19 -52 R
0 68 V
-31 -68 R
62 0 V
-62 68 R
62 0 V
-18 -75 R
0 71 V
-31 -71 R
62 0 V
-62 71 R
62 0 V
-19 -71 R
0 62 V
-31 -62 R
62 0 V
-62 62 R
62 0 V
-6 -72 R
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
-7 -44 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
-6 -43 R
0 52 V
-31 -52 R
62 0 V
-62 52 R
62 0 V
-7 -56 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
-6 -68 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
-6 -57 R
0 50 V
-31 -50 R
62 0 V
-62 50 R
62 0 V
-7 -42 R
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
-6 -56 R
0 56 V
-31 -56 R
62 0 V
-62 56 R
62 0 V
18 -58 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
18 -43 R
0 49 V
-31 -49 R
62 0 V
-62 49 R
62 0 V
18 -46 R
0 49 V
-31 -49 R
62 0 V
-62 49 R
62 0 V
19 -43 R
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
18 -90 R
0 83 V
-31 -83 R
62 0 V
-62 83 R
62 0 V
18 -55 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
18 -47 R
0 70 V
-31 -70 R
62 0 V
-62 70 R
62 0 V
19 -81 R
0 99 V
-31 -99 R
62 0 V
-62 99 R
62 0 V
67 -54 R
0 56 V
-31 -56 R
62 0 V
-62 56 R
62 0 V
68 -41 R
0 111 V
-31 -111 R
62 0 V
-62 111 R
62 0 V
67 -69 R
0 90 V
-31 -90 R
62 0 V
-62 90 R
62 0 V
67 -29 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
68 -13 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
67 -14 R
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
68 -32 R
0 74 V
-31 -74 R
62 0 V
-62 74 R
62 0 V
67 -20 R
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
166 17 R
0 52 V
-31 -52 R
62 0 V
-62 52 R
62 0 V
166 55 R
0 56 V
-31 -56 R
31 0 V
stroke 2339 2765 M
-31 56 R
31 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
382 2236 Pls
395 2183 Pls
407 2178 Pls
419 2195 Pls
432 2181 Pls
444 2179 Pls
456 2171 Pls
468 2165 Pls
481 2171 Pls
493 2167 Pls
505 2170 Pls
518 2164 Pls
530 2173 Pls
542 2170 Pls
555 2167 Pls
567 2169 Pls
592 2162 Pls
616 2164 Pls
641 2167 Pls
665 2164 Pls
690 2160 Pls
715 2163 Pls
739 2172 Pls
764 2168 Pls
813 2177 Pls
862 2185 Pls
911 2189 Pls
961 2194 Pls
1010 2196 Pls
1059 2202 Pls
1108 2209 Pls
1158 2222 Pls
1256 2244 Pls
1355 2266 Pls
1453 2311 Pls
1551 2361 Pls
1650 2414 Pls
1748 2473 Pls
1847 2529 Pls
1945 2588 Pls
2142 2691 Pls
2339 2791 Pls
% End plot #1
% Begin plot #2
1.000 UL
LTb
LT1
LCb setrgbcolor
382 2236 M
13 -53 V
12 -5 V
12 17 V
13 -14 V
12 -2 V
12 -8 V
12 -6 V
13 6 V
12 -4 V
12 3 V
13 -6 V
12 9 V
12 -3 V
13 -3 V
12 2 V
25 -7 V
24 2 V
25 3 V
24 -3 V
25 -4 V
25 3 V
24 9 V
25 -4 V
49 9 V
49 8 V
49 4 V
50 5 V
49 2 V
49 6 V
49 7 V
50 13 V
98 22 V
99 22 V
98 45 V
98 50 V
99 53 V
98 59 V
99 56 V
98 59 V
197 103 V
197 100 V
% End plot #2
% Begin plot #3
stroke
LTb
LT2
LCb setrgbcolor
382 1153 M
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
20 0 V
19 0 V
20 0 V
20 0 V
% End plot #3
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
370 2895 N
370 925 L
1969 0 V
0 1970 V
-1969 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
